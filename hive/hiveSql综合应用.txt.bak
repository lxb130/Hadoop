16题
select depart,come_year,total_money from
(
select depart,come_year,sum(come_money) as total_money from
(
select employee.id,depart,come_money,come_year  from
(select id,depart from employee_info) employee
join
(select id,come_money,substring(come_month,1,4) as come_year from income_info) income on employee.id=income.id 
) base_info 
group by come_year,depart
) sum_info
order by come_year desc,total_money asc;


17
select depart,total_money,dense_rank() over(order by total_money desc) as topn from
(select depart,sum(come_money) as total_money from
(select employee.id,depart,come_money from
(select id,depart from employee_info) employee
join
(select id,come_money from income_info) income on employee.id=income.id
) base_info group by depart) 
sum_info;

18
insert overwrite table income_dynamic partition(come_month)
select id,
name,
come_money,
come_time,
lag(come_money,1,0) over (partition by id order by come_time asc) as pre_money,
lag(come_time,1,0) over (partition by id order by come_time asc) as pre_time,
regexp_replace(substring(come_time,1,7),"-","") as come_month
from income_info 
     where come_type='薪资';


19
select id,
name,
(come_money-pre_come_money) as add_money,

(come_money-pre_come_money)/pre_come_money 
from income_dynamic 
where substring(come_time,1,7)='2018-06';


select id,name,add_money_topn,if(add_money_topn=1,"长得最多",null) as add_money_top1,add_money_rate_topn,if(add_money_rate_topn=1,"涨幅最大",null) as add_money_top1 from
(select id,name,rank() over(order by add_money) add_money_topn, rank() over(order by add_money_rate) add_money_rate_topn from
(select id,
name,
(come_money-pre_come_money) as add_money,
substring((come_money-pre_come_money)/pre_come_money,1,4) as add_money_rate
from income_dynamic 
where substring(come_time,1,7)='2018-06'
) base_info
) topn_info
where add_money_topn=1 or add_money_rate_topn=1